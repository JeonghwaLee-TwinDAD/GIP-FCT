<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <!-- Register a section handler for the log4net section -->
  <configSections>
    <section name="log4net" type="System.Configuration.IgnoreSectionHandler" />
  </configSections>
  <appSettings>
    <!-- To enable internal log4net logging specify the following appSettings key -->
    <!-- <add key="log4net.Internal.Debug" value="true"/> -->
  </appSettings>
  <!-- This section contains the log4net configuration settings -->
  <log4net>
    <!-- Define some output appenders -->
    <appender name="LogFileAppender" type="log4net.Appender.FileAppender">
      <file value="ST-PowerLine.log" />
      <!-- Example using environment variables in params -->
      <!-- <file value="${TMP}\ST-PowerLine.log" /> -->
      <appendToFile value="false" />
      <!-- An alternate output encoding can be specified -->
      <!-- <encoding value="unicodeFFFE" /> -->
      <layout type="log4net.Layout.PatternLayout">
        <header value="[Header]&#13;&#10;" />
        <footer value="[Footer]&#13;&#10;" />
        <!-- http://logging.apache.org/log4net/release/sdk/log4net.Layout.PatternLayout.html -->
        <!-- <conversionPattern value="%date %thread] %-5level %logger.%method: %message%newline" /> -->
        <conversionPattern value="%date{HH:mm:ss.fff} %-5level [%thread] %logger-> %message%newline" />
      </layout>
      <!-- Alternate layout using XML
      <layout type="log4net.Layout.XMLLayout" /> -->
    </appender>
    <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="ST-PowerLine.Rolling.log" />
      <appendToFile value="true" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="100" />
      <rollingStyle value="Size" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <header value="[Header]&#13;&#10;" />
        <footer value="[Footer]&#13;&#10;" />
        <conversionPattern value="%date [%thread] %-5level %logger [%ndc] - %message%newline" />
      </layout>
    </appender>
    <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%ndc] &lt;%property{auth}&gt; - %message%newline" />
      </layout>
    </appender>
    <appender name="NetSendAppender" type="log4net.Appender.NetSendAppender">
      <threshold value="ERROR" />
      <server value="SQUARE" />
      <recipient value="nicko" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%ndc] - %message%newline" />
      </layout>
    </appender>
    <!-- 
        <appender name="A" type="log4net.Appender.ForwardingAppender" >
            <threshold value="WARN"/>			
            <appender-ref ref="ConsoleAppender" />		
        </appender>
        <appender name="B" type="log4net.Appender.ForwardingAppender" >
            <filter type="log4net.Filter.LevelRangeFilter">
                <levelMin value="DEBUG"/>
                <levelMax value="INFO"/>
            </filter>
            <appender-ref ref="ConsoleAppender" />
        </appender> 
    -->
    <!-- Setup the root category, add the appenders and set the default level -->
    <!-- IMPORTANT: Each enabled logging request for a given logger 
         will be forwarded to all the appenders in that logger as well as 
         the appenders higher in the hierarchy. In other words, appenders 
         are inherited additively from the logger hierarchy. -->
    <root>
      <level value="INFO" />
      <appender-ref ref="LogFileAppender" />
      <!-- <appender-ref ref="ConsoleAppender" /> -->
      <!-- <appender-ref ref="NetSendAppender" /> -->
    </root>
    <!-- Specify the level for some specific categories -->
    <!-- StPowerLineGui APPLICATION -->
    <logger name="StPowerLine.App">
      <level value="INFO" />
    </logger>
    <!-- PLUGIN COMMON -->
    <logger name="Plugin.Common.PluginBase">
      <level value="INFO" />
    </logger>
    <!-- ST7570 PLUGIN -->
    <logger name="ST7570.Service.HostInterface.ServiceLayer">
        <level value="INFO" />
    </logger>
    <logger name="ST7570.Service.HostInterface.NodeInterface">
        <level value="INFO" />
    </logger>
	<!-- ST7580 PLUGIN -->
    <logger name="ST7580.Plugin.GUI.ServiceLayer">
        <level value="INFO" />
    </logger>
    <logger name="ST7580.Service.NodeInterface.NodeIf">
        <level value="INFO" />
	</logger>
	<logger name="ST7580.Plugin.GUI.NodeCommunicationCtrl">
        <level value="INFO" />
	</logger>
	<logger name="PLM.ACommunicator">
        <level value="INFO" />
	</logger>
	<logger name="PLM.AInterpreter">
        <level value="INFO" />
	</logger>
    <!-- ST7590 PLUGIN -->
    <logger name="OFDMNodeInterface.ServiceLayer">
        <level value="INFO" />
    </logger>
    <logger name="OFDMNodeInterface.NodeIf">
        <level value="INFO" />
    </logger>
    <logger name="OFDMNodeInterface.TestPhyAutoRequestConfirm">
        <level value="INFO" />
    </logger>
    <logger name="PluginNode.NodeCfgCtrl">
        <level value="INFO" />
    </logger>
    <!-- ST_G3 PLUGIN -->
    <logger name="ST_G3.Plugin.GUI.ServiceLayer">
        <level value="INFO" />
    </logger>
    <logger name="ST_G3.Service.NodeInterface.NodeIf">
        <level value="DEBUG" />
    </logger>
    <!-- FW_Update PLUGIN -->
    <logger name="FW_Update.Service.NodeInterface.ServiceLayer">
        <level value="INFO" />
    </logger>
    </log4net>
</configuration>